{
    // Place your Discord_Bot_Template workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    // 	"scope": "javascript,typescript",
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "Create basic command structure": {
        "prefix": "commandStructure",
        "body": [
            "import { Command, MyMessage } from '../../interfaces/Client';\nimport { getGuildSettings } from '../../database';\n\nconst callback = async (message: MyMessage, args: string[]) => {\nconst guildSettings = message.guild?.id ? await getGuildSettings(message.guild?.id) : null;\nconst prefix = guildSettings?.prefix || message.client.config.defaultPrefix;\n};\n\nexport const command: Command = {\nname: '',\ncategory: '',\naliases: [],\ndescription: '',\nusage: '',\nrequiresArgs: 0,\ndevOnly: false,\nguildOnly: false,\nuserPermissions: '',\nbotPermissions: '',\ncallback: callback\n};"
        ],
        "description": "This will automatically insert the basic command structure"
    },
    "Create basic eventHandler structure": {
        "prefix": "eventHandlerStructure",
        "body": ["import { Client } from '../interfaces/Client';\n\nexport default async (client: Client) => {}"],
        "description": "This will automatically insert the basic event handler structure"
    }
}
